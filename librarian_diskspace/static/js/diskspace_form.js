// Generated by CoffeeScript 1.10.0
(function(window, $, templates) {
  var FINISHED, IN_PROGRESS, NOT_STARTED, addUuidField, diskForm, diskFormContainer, errorMessage, handleButton, section, statePoller, stateUrl, submitData, url, uuidField;
  diskFormContainer = $('#dashboard-diskspace-panel');
  section = diskFormContainer.parents('.o-collapsible-section');
  diskForm = diskFormContainer.find('form');
  url = diskForm.attr('action');
  stateUrl = diskForm.data('state-url');
  errorMessage = templates.diskspaceConsolidateSubmitError;
  uuidField = null;
  NOT_STARTED = 0;
  IN_PROGRESS = 1;
  FINISHED = 2;
  statePoller = {
    buttonId: null,
    timer: null,
    buttton: null,
    getButton: function() {
      return this.button != null ? this.button : this.button = diskFormContainer.find("#" + this.buttonId);
    },
    toggleButton: function(toggle) {
      var button;
      button = this.getButton();
      button.toggleClass('diskspace-consolidation-started', !toggle);
      button.prop('disabled', !toggle);
    },
    setIcon: function(iconName) {
      var button;
      button = this.getButton();
      (button.find('.icon')).remove();
      button.prepend("<span class=\"icon icon-" + iconName + "\"></span>");
    },
    update: function(state) {
      if (state !== 'NOT_FOUND') {
        return;
      }
      this.stopPolling();
      this.setIcon('ok');
      return setTimeout((function(_this) {
        return function() {
          return _this.cleanup();
        };
      })(this), 7000);
    },
    cleanup: function() {
      this.toggleButton(true);
      return this.setIcon('folder-right');
    },
    stopPolling: function() {
      return clearTimeout(this.timer);
    },
    start: function(buttonId) {
      this.buttonId = buttonId;
      this.toggleButton(false);
      this.setIcon('spinning-loader');
      return setTimeout((function(_this) {
        return function() {
          return _this.startPolling();
        };
      })(this), 2000);
    },
    startPolling: function() {
      var poller;
      poller = this;
      return this.timer = setInterval(function() {
        var res;
        res = $.getJSON(stateUrl);
        return res.done(function(data) {
          console.log(data, poller.currentState);
          return poller.update.call(poller, data.state);
        });
      }, 2000);
    }
  };
  addUuidField = function() {
    var field;
    field = $('<input type="hidden" name="uuid">');
    diskForm.append(field);
    return field;
  };
  submitData = function(e) {
    var res;
    e.preventDefault();
    res = $.post(url, diskForm.serialize());
    res.done(function(data) {
      diskFormContainer.html(data);
      if ((diskFormContainer.find('.o-form-errors')).length) {
        return;
      }
      statePoller.start(uuidField.val());
    });
    res.fail(function() {
      diskFormContainer.prepend(errorMessage);
    });
    res.always(function() {
      section.trigger('remax');
    });
  };
  handleButton = function(e) {
    var el, uuid;
    el = $(e.target);
    uuid = el.attr('value');
    uuidField.val(uuid);
  };
  uuidField = addUuidField();
  diskFormContainer.on('click', 'button', handleButton);
  return diskFormContainer.on('submit', 'form', submitData);
})(this, this.jQuery, this.templates);
